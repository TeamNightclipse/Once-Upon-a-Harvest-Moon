import runresourcegen.Advancements

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: 'scala'
apply plugin: "net.minecraftforge.gradle.forge"

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileScala {
    scalaCompileOptions.additionalParameters = ["-Xexperimental"]
}

version = config.mc_version + "-" + config.version + "-" + config.build_number
group = 'net.katsstuff'
archivesBaseName = "spookyHarvestMoon"

minecraft {
    version = config.mc_version + "-" + config.forge_version
    if (file('../run1.12').exists()) {
        runDir = "../run1.12"
    } else {
        runDir = "run"
    }

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20170930"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replace '@VERSION@', project.version
    replaceIn 'LibMod.scala'
}

reobf {
    jar {
        extraLines += "PK: shapeless net/katsstuff/spookyharvestmoon/shade/shapeless"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    mavenCentral()
}

dependencies {
    shade 'com.chuusai:shapeless_2.11:2.3.2' exclude group: 'org.scala-lang'
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

sourceSets {
    main {
        output.dir("$buildDir/generatedResources/main", builtBy: 'generateResouces')
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

task generateResouces {
    doLast {
        Advancements.createFiles(file("$buildDir/generatedResources/main"))
    }
}

task incrementBuildNumber(dependsOn: 'reobfJar') {
    doLast {
        config.build_number = (config.build_number.toString().toInteger()) + 1
        configFile.withWriter {
            config.toProperties().store(it, "")
        }
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

idea{
    module{
        inheritOutputDirs = true
    }
}

jar {
    exclude "**/*.psd"
}

defaultTasks 'build', 'incrementBuildNumber'